/* callgraph made with GNU cflow of all C source in Linux kernel 0.11

	(find ./ -name "*.c" -type f -exec cflow '{}' \;) >O
	cat O | tools/tree2dotx > linux-0.11.dot

*/
digraph G{
	rankdir=LR;
	size="800,600";
	node [fontsize=10,fontcolor=red,style=filled,fillcolor=lightblue];
	"copy_mem() <int copy_mem (int nr, struct task_struct *p) at ./kernel/fork.c:40>:" -> "get_limit()";
	"copy_mem() <int copy_mem (int nr, struct task_struct *p) at ./kernel/fork.c:40>:" -> "get_base()";
	"copy_mem() <int copy_mem (int nr, struct task_struct *p) at ./kernel/fork.c:40>:" -> "panic()";
	"copy_mem() <int copy_mem (int nr, struct task_struct *p) at ./kernel/fork.c:40>:" -> "set_base()";
	"copy_mem() <int copy_mem (int nr, struct task_struct *p) at ./kernel/fork.c:40>:" -> "copy_page_tables()";
	"copy_mem() <int copy_mem (int nr, struct task_struct *p) at ./kernel/fork.c:40>:" -> "printk()";
	"copy_mem() <int copy_mem (int nr, struct task_struct *p) at ./kernel/fork.c:40>:" -> "free_page_tables()";
	"verify_area() <void verify_area (void *addr, int size) at ./kernel/fork.c:25>:" -> "get_base()";
	"verify_area() <void verify_area (void *addr, int size) at ./kernel/fork.c:25>:" -> "write_verify()";
	"hd_init() <void hd_init (void) at ./kernel/blk_drv/hd.c:343>:" -> "set_intr_gate()";
	"hd_init() <void hd_init (void) at ./kernel/blk_drv/hd.c:343>:" -> "outb_p()";
	"hd_init() <void hd_init (void) at ./kernel/blk_drv/hd.c:343>:" -> "inb_p()";
	"hd_init() <void hd_init (void) at ./kernel/blk_drv/hd.c:343>:" -> "outb()";
	"sys_setup() <int sys_setup (void *BIOS) at ./kernel/blk_drv/hd.c:71>:" -> "CMOS_READ()";
	"sys_setup() <int sys_setup (void *BIOS) at ./kernel/blk_drv/hd.c:71>:" -> "bread()";
	"sys_setup() <int sys_setup (void *BIOS) at ./kernel/blk_drv/hd.c:71>:" -> "printk()";
	"sys_setup() <int sys_setup (void *BIOS) at ./kernel/blk_drv/hd.c:71>:" -> "panic()";
	"sys_setup() <int sys_setup (void *BIOS) at ./kernel/blk_drv/hd.c:71>:" -> "brelse()";
	"sys_setup() <int sys_setup (void *BIOS) at ./kernel/blk_drv/hd.c:71>:" -> "rd_load()";
	"sys_setup() <int sys_setup (void *BIOS) at ./kernel/blk_drv/hd.c:71>:" -> "mount_root()";
	"unexpected_hd_interrupt() <void unexpected_hd_interrupt (void) at ./kernel/blk_drv/hd.c:237>:" -> "printk()";
	"do_rd_request() <void do_rd_request (void) at ./kernel/blk_drv/ramdisk.c:23>:" -> "MINOR()";
	"do_rd_request() <void do_rd_request (void) at ./kernel/blk_drv/ramdisk.c:23>:" -> "end_request()";
	"do_rd_request() <void do_rd_request (void) at ./kernel/blk_drv/ramdisk.c:23>:" -> "memcpy()";
	"do_rd_request() <void do_rd_request (void) at ./kernel/blk_drv/ramdisk.c:23>:" -> "panic()";
	"rd_load() <void rd_load (void) at ./kernel/blk_drv/ramdisk.c:71>:" -> "printk()";
	"rd_load() <void rd_load (void) at ./kernel/blk_drv/ramdisk.c:71>:" -> "MAJOR()";
	"rd_load() <void rd_load (void) at ./kernel/blk_drv/ramdisk.c:71>:" -> "breada()";
	"rd_load() <void rd_load (void) at ./kernel/blk_drv/ramdisk.c:71>:" -> "brelse()";
	"rd_load() <void rd_load (void) at ./kernel/blk_drv/ramdisk.c:71>:" -> "bread()";
	"rd_load() <void rd_load (void) at ./kernel/blk_drv/ramdisk.c:71>:" -> "memcpy()";
	"floppy_change() <int floppy_change (unsigned int nr) at ./kernel/blk_drv/floppy.c:139>:" -> "floppy_on()";
	"floppy_change() <int floppy_change (unsigned int nr) at ./kernel/blk_drv/floppy.c:139>:" -> "interruptible_sleep_on()";
	"floppy_change() <int floppy_change (unsigned int nr) at ./kernel/blk_drv/floppy.c:139>:" -> "inb()";
	"floppy_change() <int floppy_change (unsigned int nr) at ./kernel/blk_drv/floppy.c:139>:" -> "floppy_off()";
	"floppy_init() <void floppy_init (void) at ./kernel/blk_drv/floppy.c:457>:" -> "set_trap_gate()";
	"floppy_init() <void floppy_init (void) at ./kernel/blk_drv/floppy.c:457>:" -> "outb()";
	"floppy_init() <void floppy_init (void) at ./kernel/blk_drv/floppy.c:457>:" -> "inb_p()";
	"unexpected_floppy_interrupt() <void unexpected_floppy_interrupt (void) at ./kernel/blk_drv/floppy.c:353>:" -> "output_byte() <void output_byte (char byte) at ./kernel/blk_drv/floppy.c:194>:";
	"output_byte() <void output_byte (char byte) at ./kernel/blk_drv/floppy.c:194>:" -> "inb_p()";
	"output_byte() <void output_byte (char byte) at ./kernel/blk_drv/floppy.c:194>:" -> "outb()";
	"output_byte() <void output_byte (char byte) at ./kernel/blk_drv/floppy.c:194>:" -> "printk()";
	"unexpected_floppy_interrupt() <void unexpected_floppy_interrupt (void) at ./kernel/blk_drv/floppy.c:353>:" -> "result() <int result (void) at ./kernel/blk_drv/floppy.c:212>:";
	"result() <int result (void) at ./kernel/blk_drv/floppy.c:212>:" -> "inb_p()";
	"result() <int result (void) at ./kernel/blk_drv/floppy.c:212>:" -> "printk()";
	"ll_rw_block() <void ll_rw_block (int rw, struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:145>:" -> "MAJOR()";
	"ll_rw_block() <void ll_rw_block (int rw, struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:145>:" -> "printk()";
	"ll_rw_block() <void ll_rw_block (int rw, struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:145>:" -> "make_request() <void make_request (int major, int rw, struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:88>:";
	"make_request() <void make_request (int major, int rw, struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:88>:" -> "panic()";
	"make_request() <void make_request (int major, int rw, struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:88>:" -> "lock_buffer() <inline void lock_buffer (struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:42>:";
	"lock_buffer() <inline void lock_buffer (struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:42>:" -> "cli()";
	"lock_buffer() <inline void lock_buffer (struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:42>:" -> "sleep_on()";
	"lock_buffer() <inline void lock_buffer (struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:42>:" -> "sti()";
	"make_request() <void make_request (int major, int rw, struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:88>:" -> "unlock_buffer() <inline void unlock_buffer (struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:51>:";
	"unlock_buffer() <inline void unlock_buffer (struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:51>:" -> "printk()";
	"unlock_buffer() <inline void unlock_buffer (struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:51>:" -> "wake_up()";
	"make_request() <void make_request (int major, int rw, struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:88>:" -> "sleep_on()";
	"make_request() <void make_request (int major, int rw, struct buffer_head *bh) at ./kernel/blk_drv/ll_rw_blk.c:88>:" -> "add_request() <void add_request (struct blk_dev_struct *dev, struct request *req) at ./kernel/blk_drv/ll_rw_blk.c:64>:";
	"add_request() <void add_request (struct blk_dev_struct *dev, struct request *req) at ./kernel/blk_drv/ll_rw_blk.c:64>:" -> "cli()";
	"add_request() <void add_request (struct blk_dev_struct *dev, struct request *req) at ./kernel/blk_drv/ll_rw_blk.c:64>:" -> "sti()";
	"add_request() <void add_request (struct blk_dev_struct *dev, struct request *req) at ./kernel/blk_drv/ll_rw_blk.c:64>:" -> "IN_ORDER()";
	"math_emulate() <void math_emulate (long edi, long esi, long ebp, long sys_call_ret, long eax, long ebx, long ecx, long edx, unsigned short fs, unsigned short es, unsigned short ds, unsigned long eip, unsigned short cs, unsigned long eflags, unsigned short ss, unsigned long esp) at ./kernel/math/math_emulate.c:18>:" -> "printk()";
	"math_emulate() <void math_emulate (long edi, long esi, long ebp, long sys_call_ret, long eax, long ebx, long ecx, long edx, unsigned short fs, unsigned short es, unsigned short ds, unsigned long eip, unsigned short cs, unsigned long eflags, unsigned short ss, unsigned long esp) at ./kernel/math/math_emulate.c:18>:" -> "panic()";
	"math_emulate() <void math_emulate (long edi, long esi, long ebp, long sys_call_ret, long eax, long ebx, long ecx, long edx, unsigned short fs, unsigned short es, unsigned short ds, unsigned long eip, unsigned short cs, unsigned long eflags, unsigned short ss, unsigned long esp) at ./kernel/math/math_emulate.c:18>:" -> "get_fs_byte()";
	"do_signal() <void do_signal (long signr, long eax, long ebx, long ecx, long edx, long fs, long es, long ds, long eip, long cs, long eflags, unsigned long *esp, long ss) at ./kernel/signal.c:82>:" -> "do_exit()";
	"do_signal() <void do_signal (long signr, long eax, long ebx, long ecx, long edx, long fs, long es, long ds, long eip, long cs, long eflags, unsigned long *esp, long ss) at ./kernel/signal.c:82>:" -> "verify_area()";
	"do_signal() <void do_signal (long signr, long eax, long ebx, long ecx, long edx, long fs, long es, long ds, long eip, long cs, long eflags, unsigned long *esp, long ss) at ./kernel/signal.c:82>:" -> "put_fs_long()";
	"sys_sigaction() <int sys_sigaction (int signum, const struct sigaction *action, struct sigaction *oldaction) at ./kernel/signal.c:63>:" -> "get_new() <inline void get_new (char *from, char *to) at ./kernel/signal.c:40>:";
	"get_new() <inline void get_new (char *from, char *to) at ./kernel/signal.c:40>:" -> "get_fs_byte()";
	"sys_sigaction() <int sys_sigaction (int signum, const struct sigaction *action, struct sigaction *oldaction) at ./kernel/signal.c:63>:" -> "save_old() <inline void save_old (char *from, char *to) at ./kernel/signal.c:28>:";
	"save_old() <inline void save_old (char *from, char *to) at ./kernel/signal.c:28>:" -> "verify_area()";
	"save_old() <inline void save_old (char *from, char *to) at ./kernel/signal.c:28>:" -> "put_fs_byte()";
	"sys_exit() <int sys_exit (int error_code) at ./kernel/exit.c:136>:" -> "do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:";
	"do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:" -> "free_page_tables()";
	"do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:" -> "get_base()";
	"do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:" -> "get_limit()";
	"do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:" -> "send_sig() <inline int send_sig (long sig, struct task_struct *p, int priv) at ./kernel/exit.c:35>:";
	"send_sig() <inline int send_sig (long sig, struct task_struct *p, int priv) at ./kernel/exit.c:35>:" -> "suser()";
	"do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:" -> "sys_close()";
	"do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:" -> "iput()";
	"do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:" -> "kill_session() <void kill_session (void) at ./kernel/exit.c:46>:";
	"do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:" -> "tell_father() <void tell_father (int pid) at ./kernel/exit.c:83>:";
	"tell_father() <void tell_father (int pid) at ./kernel/exit.c:83>:" -> "printk()";
	"tell_father() <void tell_father (int pid) at ./kernel/exit.c:83>:" -> "release() <void release (struct task_struct *p) at ./kernel/exit.c:19>:";
	"release() <void release (struct task_struct *p) at ./kernel/exit.c:19>:" -> "free_page()";
	"release() <void release (struct task_struct *p) at ./kernel/exit.c:19>:" -> "schedule()";
	"release() <void release (struct task_struct *p) at ./kernel/exit.c:19>:" -> "panic()";
	"do_exit() <int do_exit (long code) at ./kernel/exit.c:102>:" -> "schedule()";
	"sys_kill() <int sys_kill (int pid, int sig) at ./kernel/exit.c:60>:" -> "send_sig() <inline int send_sig (long sig, struct task_struct *p, int priv) at ./kernel/exit.c:35>:";
	"send_sig() <inline int send_sig (long sig, struct task_struct *p, int priv) at ./kernel/exit.c:35>:" -> "suser()";
	"sys_waitpid() <int sys_waitpid (pid_t pid, unsigned long *stat_addr, int options) at ./kernel/exit.c:141>:" -> "verify_area()";
	"sys_waitpid() <int sys_waitpid (pid_t pid, unsigned long *stat_addr, int options) at ./kernel/exit.c:141>:" -> "put_fs_long()";
	"sys_waitpid() <int sys_waitpid (pid_t pid, unsigned long *stat_addr, int options) at ./kernel/exit.c:141>:" -> "release() <void release (struct task_struct *p) at ./kernel/exit.c:19>:";
	"release() <void release (struct task_struct *p) at ./kernel/exit.c:19>:" -> "free_page()";
	"release() <void release (struct task_struct *p) at ./kernel/exit.c:19>:" -> "schedule()";
	"release() <void release (struct task_struct *p) at ./kernel/exit.c:19>:" -> "panic()";
	"sys_waitpid() <int sys_waitpid (pid_t pid, unsigned long *stat_addr, int options) at ./kernel/exit.c:141>:" -> "schedule()";
	"do_tty_interrupt() <void do_tty_interrupt (int tty) at ./kernel/chr_drv/tty_io.c:343>:" -> "copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "EMPTY()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "FULL()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "GETCH()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "I_CRNL()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "I_NOCR()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "I_NLCR()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "I_UCLC()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "tolower()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "L_CANON()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "KILL_CHAR()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "LAST()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "EOF_CHAR()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "L_ECHO()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "PUTCH()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "DEC()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "ERASE_CHAR()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "STOP_CHAR()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "START_CHAR()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "L_ISIG()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "INTR_CHAR()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "tty_intr() <void tty_intr (struct tty_struct *tty, int mask) at ./kernel/chr_drv/tty_io.c:111>:";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "QUIT_CHAR()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "L_ECHOCTL()";
	"copy_to_cooked() <void copy_to_cooked (struct tty_struct *tty) at ./kernel/chr_drv/tty_io.c:145>:" -> "wake_up()";
	"tty_init() <void tty_init (void) at ./kernel/chr_drv/tty_io.c:105>:" -> "rs_init()";
	"tty_init() <void tty_init (void) at ./kernel/chr_drv/tty_io.c:105>:" -> "con_init()";
	"tty_read() <int tty_read (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:230>:" -> "EMPTY()";
	"tty_read() <int tty_read (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:230>:" -> "L_CANON()";
	"tty_read() <int tty_read (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:230>:" -> "LEFT()";
	"tty_read() <int tty_read (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:230>:" -> "sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:";
	"sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:" -> "cli()";
	"sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:" -> "EMPTY()";
	"sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:" -> "interruptible_sleep_on()";
	"sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:" -> "sti()";
	"tty_read() <int tty_read (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:230>:" -> "GETCH()";
	"tty_read() <int tty_read (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:230>:" -> "EOF_CHAR()";
	"tty_read() <int tty_read (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:230>:" -> "put_fs_byte()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "sleep_if_full() <void sleep_if_full (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:130>:";
	"sleep_if_full() <void sleep_if_full (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:130>:" -> "FULL()";
	"sleep_if_full() <void sleep_if_full (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:130>:" -> "cli()";
	"sleep_if_full() <void sleep_if_full (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:130>:" -> "LEFT()";
	"sleep_if_full() <void sleep_if_full (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:130>:" -> "interruptible_sleep_on()";
	"sleep_if_full() <void sleep_if_full (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:130>:" -> "sti()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "FULL()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "get_fs_byte()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "O_POST()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "O_CRNL()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "O_NLRET()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "O_NLCR()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "PUTCH()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "O_LCUC()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "toupper()";
	"tty_write() <int tty_write (unsigned channel, char *buf, int nr) at ./kernel/chr_drv/tty_io.c:291>:" -> "schedule()";
	"wait_for_keypress() <void wait_for_keypress (void) at ./kernel/chr_drv/tty_io.c:140>:" -> "sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:";
	"sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:" -> "cli()";
	"sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:" -> "EMPTY()";
	"sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:" -> "interruptible_sleep_on()";
	"sleep_if_empty() <void sleep_if_empty (struct tty_queue *queue) at ./kernel/chr_drv/tty_io.c:122>:" -> "sti()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "MAJOR()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "panic()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "MINOR()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "get_termios() <int get_termios (struct tty_struct *tty, struct termios *termios) at ./kernel/chr_drv/tty_ioctl.c:56>:";
	"get_termios() <int get_termios (struct tty_struct *tty, struct termios *termios) at ./kernel/chr_drv/tty_ioctl.c:56>:" -> "verify_area()";
	"get_termios() <int get_termios (struct tty_struct *tty, struct termios *termios) at ./kernel/chr_drv/tty_ioctl.c:56>:" -> "put_fs_byte()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "flush() <void flush (struct tty_queue *queue) at ./kernel/chr_drv/tty_ioctl.c:39>:";
	"flush() <void flush (struct tty_queue *queue) at ./kernel/chr_drv/tty_ioctl.c:39>:" -> "cli()";
	"flush() <void flush (struct tty_queue *queue) at ./kernel/chr_drv/tty_ioctl.c:39>:" -> "sti()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "wait_until_sent() <void wait_until_sent (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:46>";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "set_termios() <int set_termios (struct tty_struct *tty, struct termios *termios) at ./kernel/chr_drv/tty_ioctl.c:66>:";
	"set_termios() <int set_termios (struct tty_struct *tty, struct termios *termios) at ./kernel/chr_drv/tty_ioctl.c:66>:" -> "get_fs_byte()";
	"set_termios() <int set_termios (struct tty_struct *tty, struct termios *termios) at ./kernel/chr_drv/tty_ioctl.c:66>:" -> "change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:";
	"change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:" -> "cli()";
	"change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:" -> "outb_p()";
	"change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:" -> "outb()";
	"change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:" -> "sti()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "get_termio() <int get_termio (struct tty_struct *tty, struct termio *termio) at ./kernel/chr_drv/tty_ioctl.c:76>:";
	"get_termio() <int get_termio (struct tty_struct *tty, struct termio *termio) at ./kernel/chr_drv/tty_ioctl.c:76>:" -> "verify_area()";
	"get_termio() <int get_termio (struct tty_struct *tty, struct termio *termio) at ./kernel/chr_drv/tty_ioctl.c:76>:" -> "put_fs_byte()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "set_termio() <int set_termio (struct tty_struct *tty, struct termio *termio) at ./kernel/chr_drv/tty_ioctl.c:97>:";
	"set_termio() <int set_termio (struct tty_struct *tty, struct termio *termio) at ./kernel/chr_drv/tty_ioctl.c:97>:" -> "get_fs_byte()";
	"set_termio() <int set_termio (struct tty_struct *tty, struct termio *termio) at ./kernel/chr_drv/tty_ioctl.c:97>:" -> "change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:";
	"change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:" -> "cli()";
	"change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:" -> "outb_p()";
	"change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:" -> "outb()";
	"change_speed() <void change_speed (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:24>:" -> "sti()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "send_break() <void send_break (struct tty_struct *tty) at ./kernel/chr_drv/tty_ioctl.c:51>";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "verify_area()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "put_fs_long()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "get_fs_long()";
	"tty_ioctl() <int tty_ioctl (int dev, int cmd, int arg) at ./kernel/chr_drv/tty_ioctl.c:115>:" -> "CHARS()";
	"rs_init() <void rs_init (void) at ./kernel/chr_drv/serial.c:37>:" -> "set_intr_gate()";
	"rs_init() <void rs_init (void) at ./kernel/chr_drv/serial.c:37>:" -> "init() <void init (int port) at ./kernel/chr_drv/serial.c:26>:";
	"init() <void init (int port) at ./kernel/chr_drv/serial.c:26>:" -> "outb_p()";
	"init() <void init (int port) at ./kernel/chr_drv/serial.c:26>:" -> "inb()";
	"rs_init() <void rs_init (void) at ./kernel/chr_drv/serial.c:37>:" -> "outb()";
	"rs_init() <void rs_init (void) at ./kernel/chr_drv/serial.c:37>:" -> "inb_p()";
	"rs_write() <void rs_write (struct tty_struct *tty) at ./kernel/chr_drv/serial.c:53>:" -> "cli()";
	"rs_write() <void rs_write (struct tty_struct *tty) at ./kernel/chr_drv/serial.c:53>:" -> "EMPTY()";
	"rs_write() <void rs_write (struct tty_struct *tty) at ./kernel/chr_drv/serial.c:53>:" -> "outb()";
	"rs_write() <void rs_write (struct tty_struct *tty) at ./kernel/chr_drv/serial.c:53>:" -> "inb_p()";
	"rs_write() <void rs_write (struct tty_struct *tty) at ./kernel/chr_drv/serial.c:53>:" -> "sti()";
	"con_init() <void con_init (void) at ./kernel/chr_drv/console.c:617>:" -> "gotoxy() <inline void gotoxy (unsigned int new_x, unsigned int new_y) at ./kernel/chr_drv/console.c:88>:";
	"con_init() <void con_init (void) at ./kernel/chr_drv/console.c:617>:" -> "set_trap_gate()";
	"con_init() <void con_init (void) at ./kernel/chr_drv/console.c:617>:" -> "outb_p()";
	"con_init() <void con_init (void) at ./kernel/chr_drv/console.c:617>:" -> "inb_p()";
	"con_init() <void con_init (void) at ./kernel/chr_drv/console.c:617>:" -> "outb()";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "CHARS()";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "GETCH()";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "lf() <void lf (void) at ./kernel/chr_drv/console.c:204>:";
	"lf() <void lf (void) at ./kernel/chr_drv/console.c:204>:" -> "scrup() <void scrup (void) at ./kernel/chr_drv/console.c:107>:";
	"scrup() <void scrup (void) at ./kernel/chr_drv/console.c:107>:" -> "set_origin() <inline void set_origin (void) at ./kernel/chr_drv/console.c:97>:";
	"set_origin() <inline void set_origin (void) at ./kernel/chr_drv/console.c:97>:" -> "cli()";
	"set_origin() <inline void set_origin (void) at ./kernel/chr_drv/console.c:97>:" -> "outb_p()";
	"set_origin() <inline void set_origin (void) at ./kernel/chr_drv/console.c:97>:" -> "sti()";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "cr() <void cr (void) at ./kernel/chr_drv/console.c:224>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "ERASE_CHAR()";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "del() <void del (void) at ./kernel/chr_drv/console.c:230>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "sysbeep() <void sysbeep (void) at ./kernel/chr_drv/console.c:699>:";
	"sysbeep() <void sysbeep (void) at ./kernel/chr_drv/console.c:699>:" -> "outb_p()";
	"sysbeep() <void sysbeep (void) at ./kernel/chr_drv/console.c:699>:" -> "inb_p()";
	"sysbeep() <void sysbeep (void) at ./kernel/chr_drv/console.c:699>:" -> "outb()";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "gotoxy() <inline void gotoxy (unsigned int new_x, unsigned int new_y) at ./kernel/chr_drv/console.c:88>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "ri() <void ri (void) at ./kernel/chr_drv/console.c:214>:";
	"ri() <void ri (void) at ./kernel/chr_drv/console.c:214>:" -> "scrdown() <void scrdown (void) at ./kernel/chr_drv/console.c:170>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "respond() <void respond (struct tty_struct *tty) at ./kernel/chr_drv/console.c:323>:";
	"respond() <void respond (struct tty_struct *tty) at ./kernel/chr_drv/console.c:323>:" -> "cli()";
	"respond() <void respond (struct tty_struct *tty) at ./kernel/chr_drv/console.c:323>:" -> "PUTCH()";
	"respond() <void respond (struct tty_struct *tty) at ./kernel/chr_drv/console.c:323>:" -> "sti()";
	"respond() <void respond (struct tty_struct *tty) at ./kernel/chr_drv/console.c:323>:" -> "copy_to_cooked()";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "save_cur() <void save_cur (void) at ./kernel/chr_drv/console.c:434>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "restore_cur() <void restore_cur (void) at ./kernel/chr_drv/console.c:440>:";
	"restore_cur() <void restore_cur (void) at ./kernel/chr_drv/console.c:440>:" -> "gotoxy() <inline void gotoxy (unsigned int new_x, unsigned int new_y) at ./kernel/chr_drv/console.c:88>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "csi_J() <void csi_J (int par) at ./kernel/chr_drv/console.c:239>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "csi_K() <void csi_K (int par) at ./kernel/chr_drv/console.c:268>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "csi_L() <void csi_L (unsigned int nr) at ./kernel/chr_drv/console.c:401>:";
	"csi_L() <void csi_L (unsigned int nr) at ./kernel/chr_drv/console.c:401>:" -> "insert_line() <void insert_line (void) at ./kernel/chr_drv/console.c:350>:";
	"insert_line() <void insert_line (void) at ./kernel/chr_drv/console.c:350>:" -> "scrdown() <void scrdown (void) at ./kernel/chr_drv/console.c:170>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "csi_M() <void csi_M (unsigned int nr) at ./kernel/chr_drv/console.c:421>:";
	"csi_M() <void csi_M (unsigned int nr) at ./kernel/chr_drv/console.c:421>:" -> "delete_line() <void delete_line (void) at ./kernel/chr_drv/console.c:378>:";
	"delete_line() <void delete_line (void) at ./kernel/chr_drv/console.c:378>:" -> "scrup() <void scrup (void) at ./kernel/chr_drv/console.c:107>:";
	"scrup() <void scrup (void) at ./kernel/chr_drv/console.c:107>:" -> "set_origin() <inline void set_origin (void) at ./kernel/chr_drv/console.c:97>:";
	"set_origin() <inline void set_origin (void) at ./kernel/chr_drv/console.c:97>:" -> "cli()";
	"set_origin() <inline void set_origin (void) at ./kernel/chr_drv/console.c:97>:" -> "outb_p()";
	"set_origin() <inline void set_origin (void) at ./kernel/chr_drv/console.c:97>:" -> "sti()";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "csi_P() <void csi_P (unsigned int nr) at ./kernel/chr_drv/console.c:411>:";
	"csi_P() <void csi_P (unsigned int nr) at ./kernel/chr_drv/console.c:411>:" -> "delete_char() <void delete_char (void) at ./kernel/chr_drv/console.c:363>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "csi_at() <void csi_at (unsigned int nr) at ./kernel/chr_drv/console.c:391>:";
	"csi_at() <void csi_at (unsigned int nr) at ./kernel/chr_drv/console.c:391>:" -> "insert_char() <void insert_char (void) at ./kernel/chr_drv/console.c:336>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "csi_m() <void csi_m (void) at ./kernel/chr_drv/console.c:299>:";
	"con_write() <void con_write (struct tty_struct *tty) at ./kernel/chr_drv/console.c:445>:" -> "set_cursor() <inline void set_cursor (void) at ./kernel/chr_drv/console.c:313>:";
	"set_cursor() <inline void set_cursor (void) at ./kernel/chr_drv/console.c:313>:" -> "cli()";
	"set_cursor() <inline void set_cursor (void) at ./kernel/chr_drv/console.c:313>:" -> "outb_p()";
	"set_cursor() <inline void set_cursor (void) at ./kernel/chr_drv/console.c:313>:" -> "sti()";
	"sysbeepstop() <void sysbeepstop (void) at ./kernel/chr_drv/console.c:691>:" -> "outb()";
	"sysbeepstop() <void sysbeepstop (void) at ./kernel/chr_drv/console.c:691>:" -> "inb_p()";
	"vsprintf() <int vsprintf (char *buf, const char *fmt, va_list args) at ./kernel/vsprintf.c:94>:" -> "is_digit()";
	"vsprintf() <int vsprintf (char *buf, const char *fmt, va_list args) at ./kernel/vsprintf.c:94>:" -> "skip_atoi() <int skip_atoi (const char **s) at ./kernel/vsprintf.c:18>:";
	"skip_atoi() <int skip_atoi (const char **s) at ./kernel/vsprintf.c:18>:" -> "is_digit()";
	"vsprintf() <int vsprintf (char *buf, const char *fmt, va_list args) at ./kernel/vsprintf.c:94>:" -> "va_arg()";
	"vsprintf() <int vsprintf (char *buf, const char *fmt, va_list args) at ./kernel/vsprintf.c:94>:" -> "strlen()";
	"vsprintf() <int vsprintf (char *buf, const char *fmt, va_list args) at ./kernel/vsprintf.c:94>:" -> "number() <char *number (char *str, int num, int base, int size, int precision, int type) at ./kernel/vsprintf.c:40>:";
	"number() <char *number (char *str, int num, int base, int size, int precision, int type) at ./kernel/vsprintf.c:40>:" -> "do_div()";
	"printk() <int printk (const char *fmt, ...) at ./kernel/printk.c:21>:" -> "va_start()";
	"printk() <int printk (const char *fmt, ...) at ./kernel/printk.c:21>:" -> "vsprintf()";
	"printk() <int printk (const char *fmt, ...) at ./kernel/printk.c:21>:" -> "va_end()";
	"add_timer() <void add_timer (long jiffies, void (*fn) (void)) at ./kernel/sched.c:272>:" -> "cli()";
	"add_timer() <void add_timer (long jiffies, void (*fn) (void)) at ./kernel/sched.c:272>:" -> "panic()";
	"add_timer() <void add_timer (long jiffies, void (*fn) (void)) at ./kernel/sched.c:272>:" -> "sti()";
	"do_timer() <void do_timer (long cpl) at ./kernel/sched.c:305>:" -> "sysbeepstop()";
	"do_timer() <void do_timer (long cpl) at ./kernel/sched.c:305>:" -> "do_floppy_timer() <void do_floppy_timer (void) at ./kernel/sched.c:245>:";
	"do_floppy_timer() <void do_floppy_timer (void) at ./kernel/sched.c:245>:" -> "wake_up() <void wake_up (struct task_struct **p) at ./kernel/sched.c:188>:";
	"do_floppy_timer() <void do_floppy_timer (void) at ./kernel/sched.c:245>:" -> "outb()";
	"do_timer() <void do_timer (long cpl) at ./kernel/sched.c:305>:" -> "schedule() <void schedule (void) at ./kernel/sched.c:104>:";
	"schedule() <void schedule (void) at ./kernel/sched.c:104>:" -> "switch_to()";
	"floppy_on() <void floppy_on (unsigned int nr) at ./kernel/sched.c:232>:" -> "cli()";
	"floppy_on() <void floppy_on (unsigned int nr) at ./kernel/sched.c:232>:" -> "ticks_to_floppy_on() <int ticks_to_floppy_on (unsigned int nr) at ./kernel/sched.c:206>:";
	"ticks_to_floppy_on() <int ticks_to_floppy_on (unsigned int nr) at ./kernel/sched.c:206>:" -> "panic()";
	"ticks_to_floppy_on() <int ticks_to_floppy_on (unsigned int nr) at ./kernel/sched.c:206>:" -> "cli()";
	"ticks_to_floppy_on() <int ticks_to_floppy_on (unsigned int nr) at ./kernel/sched.c:206>:" -> "outb()";
	"ticks_to_floppy_on() <int ticks_to_floppy_on (unsigned int nr) at ./kernel/sched.c:206>:" -> "sti()";
	"floppy_on() <void floppy_on (unsigned int nr) at ./kernel/sched.c:232>:" -> "sleep_on() <void sleep_on (struct task_struct **p) at ./kernel/sched.c:151>:";
	"sleep_on() <void sleep_on (struct task_struct **p) at ./kernel/sched.c:151>:" -> "panic()";
	"sleep_on() <void sleep_on (struct task_struct **p) at ./kernel/sched.c:151>:" -> "schedule() <void schedule (void) at ./kernel/sched.c:104>:";
	"schedule() <void schedule (void) at ./kernel/sched.c:104>:" -> "switch_to()";
	"floppy_on() <void floppy_on (unsigned int nr) at ./kernel/sched.c:232>:" -> "sti()";
	"interruptible_sleep_on() <void interruptible_sleep_on (struct task_struct **p) at ./kernel/sched.c:167>:" -> "panic()";
	"interruptible_sleep_on() <void interruptible_sleep_on (struct task_struct **p) at ./kernel/sched.c:167>:" -> "schedule() <void schedule (void) at ./kernel/sched.c:104>:";
	"schedule() <void schedule (void) at ./kernel/sched.c:104>:" -> "switch_to()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "panic()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "set_tss_desc()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "set_ldt_desc()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "ltr()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "lldt()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "outb_p()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "outb()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "set_intr_gate()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "inb_p()";
	"sched_init() <void sched_init (void) at ./kernel/sched.c:385>:" -> "set_system_gate()";
	"show_stat() <void show_stat (void) at ./kernel/sched.c:37>:" -> "show_task() <void show_task (int nr, struct task_struct *p) at ./kernel/sched.c:26>:";
	"show_task() <void show_task (int nr, struct task_struct *p) at ./kernel/sched.c:26>:" -> "printk()";
	"sys_pause() <int sys_pause (void) at ./kernel/sched.c:144>:" -> "schedule() <void schedule (void) at ./kernel/sched.c:104>:";
	"schedule() <void schedule (void) at ./kernel/sched.c:104>:" -> "switch_to()";
	"sys_setgid() <int sys_setgid (int gid) at ./kernel/sys.c:72>:" -> "sys_setregid() <int sys_setregid (int rgid, int egid) at ./kernel/sys.c:51>:";
	"sys_setregid() <int sys_setregid (int rgid, int egid) at ./kernel/sys.c:51>:" -> "suser()";
	"sys_setsid() <int sys_setsid (void) at ./kernel/sys.c:206>:" -> "suser()";
	"sys_setuid() <int sys_setuid (int uid) at ./kernel/sys.c:143>:" -> "sys_setreuid() <int sys_setreuid (int ruid, int euid) at ./kernel/sys.c:118>:";
	"sys_setreuid() <int sys_setreuid (int ruid, int euid) at ./kernel/sys.c:118>:" -> "suser()";
	"sys_stime() <int sys_stime (long *tptr) at ./kernel/sys.c:148>:" -> "suser()";
	"sys_stime() <int sys_stime (long *tptr) at ./kernel/sys.c:148>:" -> "get_fs_long()";
	"sys_time() <int sys_time (long *tloc) at ./kernel/sys.c:102>:" -> "verify_area()";
	"sys_time() <int sys_time (long *tloc) at ./kernel/sys.c:102>:" -> "put_fs_long()";
	"sys_times() <int sys_times (struct tms *tbuf) at ./kernel/sys.c:156>:" -> "verify_area()";
	"sys_times() <int sys_times (struct tms *tbuf) at ./kernel/sys.c:156>:" -> "put_fs_long()";
	"sys_uname() <int sys_uname (struct utsname *name) at ./kernel/sys.c:216>:" -> "verify_area()";
	"sys_uname() <int sys_uname (struct utsname *name) at ./kernel/sys.c:216>:" -> "put_fs_byte()";
	"panic() <void panic (const char *s) at ./kernel/panic.c:18>:" -> "printk()";
	"panic() <void panic (const char *s) at ./kernel/panic.c:18>:" -> "sys_sync()";
	"do_bounds() <void do_bounds (long esp, long error_code) at ./kernel/traps.c:134>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_coprocessor_error() <void do_coprocessor_error (long esp, long error_code) at ./kernel/traps.c:169>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_coprocessor_segment_overrun() <void do_coprocessor_segment_overrun (long esp, long error_code) at ./kernel/traps.c:149>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_debug() <void do_debug (long esp, long error_code) at ./kernel/traps.c:124>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_device_not_available() <void do_device_not_available (long esp, long error_code) at ./kernel/traps.c:144>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_divide_error() <void do_divide_error (long esp, long error_code) at ./kernel/traps.c:97>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_double_fault() <void do_double_fault (long esp, long error_code) at ./kernel/traps.c:87>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_general_protection() <void do_general_protection (long esp, long error_code) at ./kernel/traps.c:92>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_int3() <void do_int3 (long *esp, long error_code, long fs, long es, long ds, long ebp, long esi, long edi, long edx, long ecx, long ebx, long eax) at ./kernel/traps.c:102>:" -> "printk()";
	"do_invalid_TSS() <void do_invalid_TSS (long esp, long error_code) at ./kernel/traps.c:154>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_invalid_op() <void do_invalid_op (long esp, long error_code) at ./kernel/traps.c:139>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_nmi() <void do_nmi (long esp, long error_code) at ./kernel/traps.c:119>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_overflow() <void do_overflow (long esp, long error_code) at ./kernel/traps.c:129>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_reserved() <void do_reserved (long esp, long error_code) at ./kernel/traps.c:176>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_segment_not_present() <void do_segment_not_present (long esp, long error_code) at ./kernel/traps.c:159>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"do_stack_segment() <void do_stack_segment (long esp, long error_code) at ./kernel/traps.c:164>:" -> "die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "printk()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_base()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_limit()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_long()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "get_seg_byte()";
	"die() <void die (char *str, long esp_ptr, long nr) at ./kernel/traps.c:63>:" -> "do_exit()";
	"trap_init() <void trap_init (void) at ./kernel/traps.c:181>:" -> "set_trap_gate()";
	"trap_init() <void trap_init (void) at ./kernel/traps.c:181>:" -> "set_system_gate()";
	"trap_init() <void trap_init (void) at ./kernel/traps.c:181>:" -> "outb_p()";
	"trap_init() <void trap_init (void) at ./kernel/traps.c:181>:" -> "inb_p()";
	"trap_init() <void trap_init (void) at ./kernel/traps.c:181>:" -> "outb()";
	"main() <void main (void) at ./init/main.c:106>:" -> "rd_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "mem_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "trap_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "blk_dev_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "chr_dev_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "tty_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "time_init() <void time_init (void) at ./init/main.c:78>:";
	"time_init() <void time_init (void) at ./init/main.c:78>:" -> "CMOS_READ()";
	"time_init() <void time_init (void) at ./init/main.c:78>:" -> "BCD_TO_BIN()";
	"time_init() <void time_init (void) at ./init/main.c:78>:" -> "kernel_mktime()";
	"main() <void main (void) at ./init/main.c:106>:" -> "sched_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "buffer_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "hd_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "floppy_init()";
	"main() <void main (void) at ./init/main.c:106>:" -> "sti()";
	"main() <void main (void) at ./init/main.c:106>:" -> "move_to_user_mode()";
	"main() <void main (void) at ./init/main.c:106>:" -> "fork()";
	"main() <void main (void) at ./init/main.c:106>:" -> "init() <void init (void) at ./init/main.c:171>:";
	"init() <void init (void) at ./init/main.c:171>:" -> "setup()";
	"init() <void init (void) at ./init/main.c:171>:" -> "open()";
	"init() <void init (void) at ./init/main.c:171>:" -> "dup()";
	"init() <void init (void) at ./init/main.c:171>:" -> "printf() <int printf (const char *fmt, ...) at ./init/main.c:154>:";
	"printf() <int printf (const char *fmt, ...) at ./init/main.c:154>:" -> "va_start()";
	"printf() <int printf (const char *fmt, ...) at ./init/main.c:154>:" -> "write()";
	"printf() <int printf (const char *fmt, ...) at ./init/main.c:154>:" -> "vsprintf()";
	"printf() <int printf (const char *fmt, ...) at ./init/main.c:154>:" -> "va_end()";
	"init() <void init (void) at ./init/main.c:171>:" -> "fork()";
	"init() <void init (void) at ./init/main.c:171>:" -> "close()";
	"init() <void init (void) at ./init/main.c:171>:" -> "execve()";
	"init() <void init (void) at ./init/main.c:171>:" -> "wait()";
	"init() <void init (void) at ./init/main.c:171>:" -> "setsid()";
	"init() <void init (void) at ./init/main.c:171>:" -> "sync() <sync at ./init/main.c:28>";
	"main() <void main (void) at ./init/main.c:106>:" -> "pause() <pause at ./init/main.c:26>";
	"open() <int open (const char *filename, int flag, ...) at ./lib/open.c:11>:" -> "va_start()";
	"open() <int open (const char *filename, int flag, ...) at ./lib/open.c:11>:" -> "va_arg()";
	"free_s() <void free_s (void *obj, int size) at ./lib/malloc.c:182>:" -> "panic()";
	"free_s() <void free_s (void *obj, int size) at ./lib/malloc.c:182>:" -> "cli()";
	"free_s() <void free_s (void *obj, int size) at ./lib/malloc.c:182>:" -> "free_page()";
	"free_s() <void free_s (void *obj, int size) at ./lib/malloc.c:182>:" -> "sti()";
	"malloc() <void *malloc (unsigned int len) at ./lib/malloc.c:117>:" -> "printk()";
	"malloc() <void *malloc (unsigned int len) at ./lib/malloc.c:117>:" -> "panic()";
	"malloc() <void *malloc (unsigned int len) at ./lib/malloc.c:117>:" -> "cli()";
	"malloc() <void *malloc (unsigned int len) at ./lib/malloc.c:117>:" -> "init_bucket_desc() <inline void init_bucket_desc () at ./lib/malloc.c:97>:";
	"init_bucket_desc() <inline void init_bucket_desc () at ./lib/malloc.c:97>:" -> "get_free_page()";
	"init_bucket_desc() <inline void init_bucket_desc () at ./lib/malloc.c:97>:" -> "panic()";
	"malloc() <void *malloc (unsigned int len) at ./lib/malloc.c:117>:" -> "get_free_page()";
	"malloc() <void *malloc (unsigned int len) at ./lib/malloc.c:117>:" -> "sti()";
	"calc_mem() <void calc_mem (void) at ./mm/memory.c:414>:" -> "printk()";
	"copy_page_tables() <int copy_page_tables (unsigned long from, unsigned long to, long size) at ./mm/memory.c:150>:" -> "panic()";
	"copy_page_tables() <int copy_page_tables (unsigned long from, unsigned long to, long size) at ./mm/memory.c:150>:" -> "get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:";
	"get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:" -> "asm()";
	"copy_page_tables() <int copy_page_tables (unsigned long from, unsigned long to, long size) at ./mm/memory.c:150>:" -> "invalidate()";
	"do_no_page() <void do_no_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:366>:" -> "get_empty_page() <void get_empty_page (unsigned long address) at ./mm/memory.c:274>:";
	"get_empty_page() <void get_empty_page (unsigned long address) at ./mm/memory.c:274>:" -> "get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:";
	"get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:" -> "asm()";
	"get_empty_page() <void get_empty_page (unsigned long address) at ./mm/memory.c:274>:" -> "put_page() <unsigned long put_page (unsigned long page, unsigned long address) at ./mm/memory.c:197>:";
	"put_page() <unsigned long put_page (unsigned long page, unsigned long address) at ./mm/memory.c:197>:" -> "printk()";
	"put_page() <unsigned long put_page (unsigned long page, unsigned long address) at ./mm/memory.c:197>:" -> "get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:";
	"get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:" -> "asm()";
	"get_empty_page() <void get_empty_page (unsigned long address) at ./mm/memory.c:274>:" -> "free_page() <void free_page (unsigned long addr) at ./mm/memory.c:89>:";
	"free_page() <void free_page (unsigned long addr) at ./mm/memory.c:89>:" -> "panic()";
	"get_empty_page() <void get_empty_page (unsigned long address) at ./mm/memory.c:274>:" -> "oom() <inline void oom (void) at ./mm/memory.c:33>:";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "printk()";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "do_exit()";
	"do_no_page() <void do_no_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:366>:" -> "share_page() <int share_page (unsigned long address) at ./mm/memory.c:345>:";
	"share_page() <int share_page (unsigned long address) at ./mm/memory.c:345>:" -> "try_to_share() <int try_to_share (unsigned long address, struct task_struct *p) at ./mm/memory.c:292>:";
	"try_to_share() <int try_to_share (unsigned long address, struct task_struct *p) at ./mm/memory.c:292>:" -> "get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:";
	"get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:" -> "asm()";
	"try_to_share() <int try_to_share (unsigned long address, struct task_struct *p) at ./mm/memory.c:292>:" -> "oom() <inline void oom (void) at ./mm/memory.c:33>:";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "printk()";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "do_exit()";
	"try_to_share() <int try_to_share (unsigned long address, struct task_struct *p) at ./mm/memory.c:292>:" -> "panic()";
	"try_to_share() <int try_to_share (unsigned long address, struct task_struct *p) at ./mm/memory.c:292>:" -> "invalidate()";
	"do_no_page() <void do_no_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:366>:" -> "get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:";
	"get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:" -> "asm()";
	"do_no_page() <void do_no_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:366>:" -> "oom() <inline void oom (void) at ./mm/memory.c:33>:";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "printk()";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "do_exit()";
	"do_no_page() <void do_no_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:366>:" -> "bmap()";
	"do_no_page() <void do_no_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:366>:" -> "bread_page()";
	"do_no_page() <void do_no_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:366>:" -> "put_page() <unsigned long put_page (unsigned long page, unsigned long address) at ./mm/memory.c:197>:";
	"put_page() <unsigned long put_page (unsigned long page, unsigned long address) at ./mm/memory.c:197>:" -> "printk()";
	"put_page() <unsigned long put_page (unsigned long page, unsigned long address) at ./mm/memory.c:197>:" -> "get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:";
	"get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:" -> "asm()";
	"do_no_page() <void do_no_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:366>:" -> "free_page() <void free_page (unsigned long addr) at ./mm/memory.c:89>:";
	"free_page() <void free_page (unsigned long addr) at ./mm/memory.c:89>:" -> "panic()";
	"do_wp_page() <void do_wp_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:247>:" -> "CODE_SPACE()";
	"do_wp_page() <void do_wp_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:247>:" -> "do_exit()";
	"do_wp_page() <void do_wp_page (unsigned long error_code, unsigned long address) at ./mm/memory.c:247>:" -> "un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "MAP_NR()";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "invalidate()";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:";
	"get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:" -> "asm()";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "oom() <inline void oom (void) at ./mm/memory.c:33>:";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "printk()";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "do_exit()";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "copy_page()";
	"free_page_tables() <int free_page_tables (unsigned long from, unsigned long size) at ./mm/memory.c:105>:" -> "panic()";
	"free_page_tables() <int free_page_tables (unsigned long from, unsigned long size) at ./mm/memory.c:105>:" -> "free_page() <void free_page (unsigned long addr) at ./mm/memory.c:89>:";
	"free_page() <void free_page (unsigned long addr) at ./mm/memory.c:89>:" -> "panic()";
	"free_page_tables() <int free_page_tables (unsigned long from, unsigned long size) at ./mm/memory.c:105>:" -> "invalidate()";
	"mem_init() <void mem_init (long start_mem, long end_mem) at ./mm/memory.c:400>:" -> "MAP_NR()";
	"write_verify() <void write_verify (unsigned long address) at ./mm/memory.c:261>:" -> "un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "MAP_NR()";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "invalidate()";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:";
	"get_free_page() <unsigned long get_free_page (void) at ./mm/memory.c:63>:" -> "asm()";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "oom() <inline void oom (void) at ./mm/memory.c:33>:";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "printk()";
	"oom() <inline void oom (void) at ./mm/memory.c:33>:" -> "do_exit()";
	"un_wp_page() <void un_wp_page (unsigned long *table_entry) at ./mm/memory.c:221>:" -> "copy_page()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "panic()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "get_fs_byte()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "S_ISDIR()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iput()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "brelse()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iget()";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_fs_byte()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "iput()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "new_inode()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "bread()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "brelse()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "create_block()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "get_fs_byte()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "brelse()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "iget()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "S_ISDIR()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "ACC_MODE()";
	"open_namei() <int open_namei (const char *pathname, int flag, int mode, struct m_inode **res_inode) at ./fs/namei.c:337>:" -> "truncate()";
	"sys_link() <int sys_link (const char *oldname, const char *newname) at ./fs/namei.c:721>:" -> "namei() <struct m_inode *namei (const char *pathname) at ./fs/namei.c:303>:";
	"namei() <struct m_inode *namei (const char *pathname) at ./fs/namei.c:303>:" -> "dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "panic()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "get_fs_byte()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "S_ISDIR()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iput()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "brelse()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iget()";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_fs_byte()";
	"namei() <struct m_inode *namei (const char *pathname) at ./fs/namei.c:303>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"namei() <struct m_inode *namei (const char *pathname) at ./fs/namei.c:303>:" -> "iput()";
	"namei() <struct m_inode *namei (const char *pathname) at ./fs/namei.c:303>:" -> "brelse()";
	"namei() <struct m_inode *namei (const char *pathname) at ./fs/namei.c:303>:" -> "iget()";
	"sys_link() <int sys_link (const char *oldname, const char *newname) at ./fs/namei.c:721>:" -> "S_ISDIR()";
	"sys_link() <int sys_link (const char *oldname, const char *newname) at ./fs/namei.c:721>:" -> "iput()";
	"sys_link() <int sys_link (const char *oldname, const char *newname) at ./fs/namei.c:721>:" -> "dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "panic()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "get_fs_byte()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "S_ISDIR()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iput()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "brelse()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iget()";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_fs_byte()";
	"sys_link() <int sys_link (const char *oldname, const char *newname) at ./fs/namei.c:721>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"sys_link() <int sys_link (const char *oldname, const char *newname) at ./fs/namei.c:721>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"sys_link() <int sys_link (const char *oldname, const char *newname) at ./fs/namei.c:721>:" -> "brelse()";
	"sys_link() <int sys_link (const char *oldname, const char *newname) at ./fs/namei.c:721>:" -> "add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "bread()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "brelse()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "create_block()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "get_fs_byte()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "suser()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "panic()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "get_fs_byte()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "S_ISDIR()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iput()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "brelse()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iget()";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_fs_byte()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "iput()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "brelse()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "new_inode()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "new_block()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "bread()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "free_block()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "strcpy()";
	"sys_mkdir() <int sys_mkdir (const char *pathname, int mode) at ./fs/namei.c:463>:" -> "add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "bread()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "brelse()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "create_block()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "get_fs_byte()";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "suser()";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "panic()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "get_fs_byte()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "S_ISDIR()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iput()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "brelse()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iget()";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_fs_byte()";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "iput()";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "brelse()";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "new_inode()";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "S_ISBLK()";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "S_ISCHR()";
	"sys_mknod() <int sys_mknod (const char *filename, int mode, int dev) at ./fs/namei.c:412>:" -> "add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "bread()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "brelse()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "create_block()";
	"add_entry() <struct buffer_head *add_entry (struct m_inode *dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:165>:" -> "get_fs_byte()";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "suser()";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "panic()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "get_fs_byte()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "S_ISDIR()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iput()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "brelse()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iget()";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_fs_byte()";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "iput()";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "iget()";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "brelse()";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "S_ISDIR()";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "empty_dir() <int empty_dir (struct m_inode *inode) at ./fs/namei.c:543>:";
	"empty_dir() <int empty_dir (struct m_inode *inode) at ./fs/namei.c:543>:" -> "bread()";
	"empty_dir() <int empty_dir (struct m_inode *inode) at ./fs/namei.c:543>:" -> "printk()";
	"empty_dir() <int empty_dir (struct m_inode *inode) at ./fs/namei.c:543>:" -> "strcmp()";
	"empty_dir() <int empty_dir (struct m_inode *inode) at ./fs/namei.c:543>:" -> "brelse()";
	"empty_dir() <int empty_dir (struct m_inode *inode) at ./fs/namei.c:543>:" -> "bmap()";
	"sys_rmdir() <int sys_rmdir (const char *name) at ./fs/namei.c:587>:" -> "printk()";
	"sys_unlink() <int sys_unlink (const char *name) at ./fs/namei.c:663>:" -> "dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "panic()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "get_fs_byte()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "S_ISDIR()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iput()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "brelse()";
	"get_dir() <struct m_inode *get_dir (const char *pathname) at ./fs/namei.c:228>:" -> "iget()";
	"dir_namei() <struct m_inode *dir_namei (const char *pathname, int *namelen, const char **name) at ./fs/namei.c:278>:" -> "get_fs_byte()";
	"sys_unlink() <int sys_unlink (const char *name) at ./fs/namei.c:663>:" -> "iput()";
	"sys_unlink() <int sys_unlink (const char *name) at ./fs/namei.c:663>:" -> "permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:";
	"permission() <int permission (struct m_inode *inode, int mask) at ./fs/namei.c:40>:" -> "suser()";
	"sys_unlink() <int sys_unlink (const char *name) at ./fs/namei.c:663>:" -> "find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_fs_byte()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "get_super()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "iput()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bread()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "brelse()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "bmap()";
	"find_entry() <struct buffer_head *find_entry (struct m_inode **dir, const char *name, int namelen, struct dir_entry **res_dir) at ./fs/namei.c:91>:" -> "match() <int match (int len, const char *name, struct dir_entry *de) at ./fs/namei.c:63>:";
	"sys_unlink() <int sys_unlink (const char *name) at ./fs/namei.c:663>:" -> "iget()";
	"sys_unlink() <int sys_unlink (const char *name) at ./fs/namei.c:663>:" -> "brelse()";
	"sys_unlink() <int sys_unlink (const char *name) at ./fs/namei.c:663>:" -> "suser()";
	"sys_unlink() <int sys_unlink (const char *name) at ./fs/namei.c:663>:" -> "S_ISDIR()";
	"sys_unlink() <int sys_unlink (const char *name) at ./fs/namei.c:663>:" -> "printk()";
	"truncate() <void truncate (struct m_inode *inode) at ./fs/truncate.c:47>:" -> "S_ISREG()";
	"truncate() <void truncate (struct m_inode *inode) at ./fs/truncate.c:47>:" -> "S_ISDIR()";
	"truncate() <void truncate (struct m_inode *inode) at ./fs/truncate.c:47>:" -> "free_block()";
	"truncate() <void truncate (struct m_inode *inode) at ./fs/truncate.c:47>:" -> "free_ind() <void free_ind (int dev, int block) at ./fs/truncate.c:11>:";
	"free_ind() <void free_ind (int dev, int block) at ./fs/truncate.c:11>:" -> "bread()";
	"free_ind() <void free_ind (int dev, int block) at ./fs/truncate.c:11>:" -> "free_block()";
	"free_ind() <void free_ind (int dev, int block) at ./fs/truncate.c:11>:" -> "brelse()";
	"truncate() <void truncate (struct m_inode *inode) at ./fs/truncate.c:47>:" -> "free_dind() <void free_dind (int dev, int block) at ./fs/truncate.c:29>:";
	"free_dind() <void free_dind (int dev, int block) at ./fs/truncate.c:29>:" -> "bread()";
	"free_dind() <void free_dind (int dev, int block) at ./fs/truncate.c:29>:" -> "free_ind() <void free_ind (int dev, int block) at ./fs/truncate.c:11>:";
	"free_ind() <void free_ind (int dev, int block) at ./fs/truncate.c:11>:" -> "bread()";
	"free_ind() <void free_ind (int dev, int block) at ./fs/truncate.c:11>:" -> "free_block()";
	"free_ind() <void free_ind (int dev, int block) at ./fs/truncate.c:11>:" -> "brelse()";
	"free_dind() <void free_dind (int dev, int block) at ./fs/truncate.c:29>:" -> "brelse()";
	"free_dind() <void free_dind (int dev, int block) at ./fs/truncate.c:29>:" -> "free_block()";
	"bread() <struct buffer_head *bread (int dev, int block) at ./fs/buffer.c:270>:" -> "getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "get_hash_table() <struct buffer_head *get_hash_table (int dev, int block) at ./fs/buffer.c:186>:";
	"get_hash_table() <struct buffer_head *get_hash_table (int dev, int block) at ./fs/buffer.c:186>:" -> "find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:";
	"find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:" -> "hash()";
	"get_hash_table() <struct buffer_head *get_hash_table (int dev, int block) at ./fs/buffer.c:186>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "BADNESS()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "sleep_on()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:";
	"sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:" -> "ll_rw_block()";
	"sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:" -> "sync_inodes()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:";
	"find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:" -> "hash()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "remove_from_queues() <inline void remove_from_queues (struct buffer_head *bh) at ./fs/buffer.c:134>:";
	"remove_from_queues() <inline void remove_from_queues (struct buffer_head *bh) at ./fs/buffer.c:134>:" -> "hash()";
	"remove_from_queues() <inline void remove_from_queues (struct buffer_head *bh) at ./fs/buffer.c:134>:" -> "panic()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "insert_into_queues() <inline void insert_into_queues (struct buffer_head *bh) at ./fs/buffer.c:152>:";
	"insert_into_queues() <inline void insert_into_queues (struct buffer_head *bh) at ./fs/buffer.c:152>:" -> "hash()";
	"bread() <struct buffer_head *bread (int dev, int block) at ./fs/buffer.c:270>:" -> "panic()";
	"bread() <struct buffer_head *bread (int dev, int block) at ./fs/buffer.c:270>:" -> "ll_rw_block()";
	"bread() <struct buffer_head *bread (int dev, int block) at ./fs/buffer.c:270>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"bread() <struct buffer_head *bread (int dev, int block) at ./fs/buffer.c:270>:" -> "brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:";
	"brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:" -> "panic()";
	"brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:" -> "wake_up()";
	"bread_page() <void bread_page (unsigned long address, int dev, int b[4]) at ./fs/buffer.c:299>:" -> "getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "get_hash_table() <struct buffer_head *get_hash_table (int dev, int block) at ./fs/buffer.c:186>:";
	"get_hash_table() <struct buffer_head *get_hash_table (int dev, int block) at ./fs/buffer.c:186>:" -> "find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:";
	"find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:" -> "hash()";
	"get_hash_table() <struct buffer_head *get_hash_table (int dev, int block) at ./fs/buffer.c:186>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "BADNESS()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "sleep_on()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:";
	"sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:" -> "ll_rw_block()";
	"sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:" -> "sync_inodes()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:";
	"find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:" -> "hash()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "remove_from_queues() <inline void remove_from_queues (struct buffer_head *bh) at ./fs/buffer.c:134>:";
	"remove_from_queues() <inline void remove_from_queues (struct buffer_head *bh) at ./fs/buffer.c:134>:" -> "hash()";
	"remove_from_queues() <inline void remove_from_queues (struct buffer_head *bh) at ./fs/buffer.c:134>:" -> "panic()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "insert_into_queues() <inline void insert_into_queues (struct buffer_head *bh) at ./fs/buffer.c:152>:";
	"insert_into_queues() <inline void insert_into_queues (struct buffer_head *bh) at ./fs/buffer.c:152>:" -> "hash()";
	"bread_page() <void bread_page (unsigned long address, int dev, int b[4]) at ./fs/buffer.c:299>:" -> "ll_rw_block()";
	"bread_page() <void bread_page (unsigned long address, int dev, int b[4]) at ./fs/buffer.c:299>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"bread_page() <void bread_page (unsigned long address, int dev, int b[4]) at ./fs/buffer.c:299>:" -> "COPYBLK()";
	"bread_page() <void bread_page (unsigned long address, int dev, int b[4]) at ./fs/buffer.c:299>:" -> "brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:";
	"brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:" -> "panic()";
	"brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:" -> "wake_up()";
	"breada() <struct buffer_head *breada (int dev, int first, ...) at ./fs/buffer.c:325>:" -> "va_start()";
	"breada() <struct buffer_head *breada (int dev, int first, ...) at ./fs/buffer.c:325>:" -> "getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "get_hash_table() <struct buffer_head *get_hash_table (int dev, int block) at ./fs/buffer.c:186>:";
	"get_hash_table() <struct buffer_head *get_hash_table (int dev, int block) at ./fs/buffer.c:186>:" -> "find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:";
	"find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:" -> "hash()";
	"get_hash_table() <struct buffer_head *get_hash_table (int dev, int block) at ./fs/buffer.c:186>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "BADNESS()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "sleep_on()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:";
	"sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:" -> "ll_rw_block()";
	"sync_dev() <int sync_dev (int dev) at ./fs/buffer.c:62>:" -> "sync_inodes()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:";
	"find_buffer() <struct buffer_head *find_buffer (int dev, int block) at ./fs/buffer.c:169>:" -> "hash()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "remove_from_queues() <inline void remove_from_queues (struct buffer_head *bh) at ./fs/buffer.c:134>:";
	"remove_from_queues() <inline void remove_from_queues (struct buffer_head *bh) at ./fs/buffer.c:134>:" -> "hash()";
	"remove_from_queues() <inline void remove_from_queues (struct buffer_head *bh) at ./fs/buffer.c:134>:" -> "panic()";
	"getblk() <struct buffer_head *getblk (int dev, int block) at ./fs/buffer.c:209>:" -> "insert_into_queues() <inline void insert_into_queues (struct buffer_head *bh) at ./fs/buffer.c:152>:";
	"insert_into_queues() <inline void insert_into_queues (struct buffer_head *bh) at ./fs/buffer.c:152>:" -> "hash()";
	"breada() <struct buffer_head *breada (int dev, int first, ...) at ./fs/buffer.c:325>:" -> "panic()";
	"breada() <struct buffer_head *breada (int dev, int first, ...) at ./fs/buffer.c:325>:" -> "ll_rw_block()";
	"breada() <struct buffer_head *breada (int dev, int first, ...) at ./fs/buffer.c:325>:" -> "va_arg()";
	"breada() <struct buffer_head *breada (int dev, int first, ...) at ./fs/buffer.c:325>:" -> "va_end()";
	"breada() <struct buffer_head *breada (int dev, int first, ...) at ./fs/buffer.c:325>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"breada() <struct buffer_head *breada (int dev, int first, ...) at ./fs/buffer.c:325>:" -> "brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:";
	"brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:" -> "panic()";
	"brelse() <void brelse (struct buffer_head *buf) at ./fs/buffer.c:256>:" -> "wake_up()";
	"check_disk_change() <void check_disk_change (int dev) at ./fs/buffer.c:116>:" -> "MAJOR()";
	"check_disk_change() <void check_disk_change (int dev) at ./fs/buffer.c:116>:" -> "floppy_change()";
	"check_disk_change() <void check_disk_change (int dev) at ./fs/buffer.c:116>:" -> "put_super()";
	"check_disk_change() <void check_disk_change (int dev) at ./fs/buffer.c:116>:" -> "invalidate_inodes()";
	"check_disk_change() <void check_disk_change (int dev) at ./fs/buffer.c:116>:" -> "invalidate_buffers() <void inline invalidate_buffers (int dev) at ./fs/buffer.c:87>:";
	"invalidate_buffers() <void inline invalidate_buffers (int dev) at ./fs/buffer.c:87>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"sys_sync() <int sys_sync (void) at ./fs/buffer.c:47>:" -> "sync_inodes()";
	"sys_sync() <int sys_sync (void) at ./fs/buffer.c:47>:" -> "wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "cli()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sleep_on()";
	"wait_on_buffer() <inline void wait_on_buffer (struct buffer_head *bh) at ./fs/buffer.c:39>:" -> "sti()";
	"sys_sync() <int sys_sync (void) at ./fs/buffer.c:47>:" -> "ll_rw_block()";
	"mount_root() <void mount_root (void) at ./fs/super.c:242>:" -> "panic()";
	"mount_root() <void mount_root (void) at ./fs/super.c:242>:" -> "MAJOR()";
	"mount_root() <void mount_root (void) at ./fs/super.c:242>:" -> "printk()";
	"mount_root() <void mount_root (void) at ./fs/super.c:242>:" -> "wait_for_keypress()";
	"mount_root() <void mount_root (void) at ./fs/super.c:242>:" -> "read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "check_disk_change()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "get_super() <struct super_block *get_super (int dev) at ./fs/super.c:56>:";
	"get_super() <struct super_block *get_super (int dev) at ./fs/super.c:56>:" -> "wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "cli()";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "sleep_on()";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "sti()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:";
	"lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:" -> "cli()";
	"lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:" -> "sleep_on()";
	"lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:" -> "sti()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "bread()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:";
	"free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:" -> "cli()";
	"free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:" -> "wake_up()";
	"free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:" -> "sti()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "brelse()";
	"mount_root() <void mount_root (void) at ./fs/super.c:242>:" -> "iget()";
	"mount_root() <void mount_root (void) at ./fs/super.c:242>:" -> "set_bit()";
	"sys_mount() <int sys_mount (char *dev_name, char *dir_name, int rw_flag) at ./fs/super.c:200>:" -> "namei()";
	"sys_mount() <int sys_mount (char *dev_name, char *dir_name, int rw_flag) at ./fs/super.c:200>:" -> "S_ISBLK()";
	"sys_mount() <int sys_mount (char *dev_name, char *dir_name, int rw_flag) at ./fs/super.c:200>:" -> "iput()";
	"sys_mount() <int sys_mount (char *dev_name, char *dir_name, int rw_flag) at ./fs/super.c:200>:" -> "S_ISDIR()";
	"sys_mount() <int sys_mount (char *dev_name, char *dir_name, int rw_flag) at ./fs/super.c:200>:" -> "read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "check_disk_change()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "get_super() <struct super_block *get_super (int dev) at ./fs/super.c:56>:";
	"get_super() <struct super_block *get_super (int dev) at ./fs/super.c:56>:" -> "wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "cli()";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "sleep_on()";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "sti()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:";
	"lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:" -> "cli()";
	"lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:" -> "sleep_on()";
	"lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:" -> "sti()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "bread()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:";
	"free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:" -> "cli()";
	"free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:" -> "wake_up()";
	"free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:" -> "sti()";
	"read_super() <struct super_block *read_super (int dev) at ./fs/super.c:100>:" -> "brelse()";
	"sys_umount() <int sys_umount (char *dev_name) at ./fs/super.c:167>:" -> "namei()";
	"sys_umount() <int sys_umount (char *dev_name) at ./fs/super.c:167>:" -> "S_ISBLK()";
	"sys_umount() <int sys_umount (char *dev_name) at ./fs/super.c:167>:" -> "iput()";
	"sys_umount() <int sys_umount (char *dev_name) at ./fs/super.c:167>:" -> "get_super() <struct super_block *get_super (int dev) at ./fs/super.c:56>:";
	"get_super() <struct super_block *get_super (int dev) at ./fs/super.c:56>:" -> "wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "cli()";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "sleep_on()";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "sti()";
	"sys_umount() <int sys_umount (char *dev_name) at ./fs/super.c:167>:" -> "printk()";
	"sys_umount() <int sys_umount (char *dev_name) at ./fs/super.c:167>:" -> "put_super() <void put_super (int dev) at ./fs/super.c:74>:";
	"put_super() <void put_super (int dev) at ./fs/super.c:74>:" -> "printk()";
	"put_super() <void put_super (int dev) at ./fs/super.c:74>:" -> "get_super() <struct super_block *get_super (int dev) at ./fs/super.c:56>:";
	"get_super() <struct super_block *get_super (int dev) at ./fs/super.c:56>:" -> "wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "cli()";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "sleep_on()";
	"wait_on_super() <void wait_on_super (struct super_block *sb) at ./fs/super.c:48>:" -> "sti()";
	"put_super() <void put_super (int dev) at ./fs/super.c:74>:" -> "lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:";
	"lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:" -> "cli()";
	"lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:" -> "sleep_on()";
	"lock_super() <void lock_super (struct super_block *sb) at ./fs/super.c:31>:" -> "sti()";
	"put_super() <void put_super (int dev) at ./fs/super.c:74>:" -> "brelse()";
	"put_super() <void put_super (int dev) at ./fs/super.c:74>:" -> "free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:";
	"free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:" -> "cli()";
	"free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:" -> "wake_up()";
	"free_super() <void free_super (struct super_block *sb) at ./fs/super.c:40>:" -> "sti()";
	"sys_umount() <int sys_umount (char *dev_name) at ./fs/super.c:167>:" -> "sync_dev()";
	"get_pipe_inode() <struct m_inode *get_pipe_inode (void) at ./fs/inode.c:228>:" -> "get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "printk()";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "panic()";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "cli()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sleep_on()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sti()";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "cli()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sleep_on()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sti()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:";
	"unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:" -> "wake_up()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "get_super()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "panic()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "bread()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "brelse()";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "memset()";
	"get_pipe_inode() <struct m_inode *get_pipe_inode (void) at ./fs/inode.c:228>:" -> "get_free_page()";
	"get_pipe_inode() <struct m_inode *get_pipe_inode (void) at ./fs/inode.c:228>:" -> "PIPE_HEAD()";
	"get_pipe_inode() <struct m_inode *get_pipe_inode (void) at ./fs/inode.c:228>:" -> "PIPE_TAIL()";
	"iget() <struct m_inode *iget (int dev, int nr) at ./fs/inode.c:244>:" -> "panic()";
	"iget() <struct m_inode *iget (int dev, int nr) at ./fs/inode.c:244>:" -> "get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "printk()";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "panic()";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "cli()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sleep_on()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sti()";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "cli()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sleep_on()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sti()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:";
	"unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:" -> "wake_up()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "get_super()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "panic()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "bread()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "brelse()";
	"get_empty_inode() <struct m_inode *get_empty_inode (void) at ./fs/inode.c:194>:" -> "memset()";
	"iget() <struct m_inode *iget (int dev, int nr) at ./fs/inode.c:244>:" -> "wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "cli()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sleep_on()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sti()";
	"iget() <struct m_inode *iget (int dev, int nr) at ./fs/inode.c:244>:" -> "printk()";
	"iget() <struct m_inode *iget (int dev, int nr) at ./fs/inode.c:244>:" -> "iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:";
	"iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:" -> "wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "cli()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sleep_on()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sti()";
	"iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:" -> "panic()";
	"iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:" -> "wake_up()";
	"iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:" -> "free_page()";
	"iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:" -> "S_ISBLK()";
	"iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:" -> "sync_dev()";
	"iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:" -> "truncate()";
	"iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:" -> "free_inode()";
	"iput() <void iput (struct m_inode *inode) at ./fs/inode.c:150>:" -> "write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "cli()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sleep_on()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sti()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:";
	"unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:" -> "wake_up()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "get_super()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "panic()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "bread()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "brelse()";
	"iget() <struct m_inode *iget (int dev, int nr) at ./fs/inode.c:244>:" -> "read_inode() <void read_inode (struct m_inode *inode) at ./fs/inode.c:294>:";
	"read_inode() <void read_inode (struct m_inode *inode) at ./fs/inode.c:294>:" -> "lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "cli()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sleep_on()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sti()";
	"read_inode() <void read_inode (struct m_inode *inode) at ./fs/inode.c:294>:" -> "get_super()";
	"read_inode() <void read_inode (struct m_inode *inode) at ./fs/inode.c:294>:" -> "panic()";
	"read_inode() <void read_inode (struct m_inode *inode) at ./fs/inode.c:294>:" -> "bread()";
	"read_inode() <void read_inode (struct m_inode *inode) at ./fs/inode.c:294>:" -> "brelse()";
	"read_inode() <void read_inode (struct m_inode *inode) at ./fs/inode.c:294>:" -> "unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:";
	"unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:" -> "wake_up()";
	"invalidate_inodes() <void invalidate_inodes (int dev) at ./fs/inode.c:43>:" -> "wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "cli()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sleep_on()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sti()";
	"invalidate_inodes() <void invalidate_inodes (int dev) at ./fs/inode.c:43>:" -> "printk()";
	"sync_inodes() <void sync_inodes (void) at ./fs/inode.c:59>:" -> "wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "cli()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sleep_on()";
	"wait_on_inode() <inline void wait_on_inode (struct m_inode *inode) at ./fs/inode.c:20>:" -> "sti()";
	"sync_inodes() <void sync_inodes (void) at ./fs/inode.c:59>:" -> "write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "cli()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sleep_on()";
	"lock_inode() <inline void lock_inode (struct m_inode *inode) at ./fs/inode.c:28>:" -> "sti()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:";
	"unlock_inode() <inline void unlock_inode (struct m_inode *inode) at ./fs/inode.c:37>:" -> "wake_up()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "get_super()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "panic()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "bread()";
	"write_inode() <void write_inode (struct m_inode *inode) at ./fs/inode.c:314>:" -> "brelse()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "panic()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "namei()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "count() <int count (char **argv) at ./fs/exec.c:75>:";
	"count() <int count (char **argv) at ./fs/exec.c:75>:" -> "get_fs_long()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "S_ISREG()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "suser()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "bread()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "strncpy()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "brelse()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "iput()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "strchr()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "copy_strings() <unsigned long copy_strings (int argc, char **argv, unsigned long *page, unsigned long p, int from_kmem) at ./fs/exec.c:104>:";
	"copy_strings() <unsigned long copy_strings (int argc, char **argv, unsigned long *page, unsigned long p, int from_kmem) at ./fs/exec.c:104>:" -> "get_ds()";
	"copy_strings() <unsigned long copy_strings (int argc, char **argv, unsigned long *page, unsigned long p, int from_kmem) at ./fs/exec.c:104>:" -> "get_fs()";
	"copy_strings() <unsigned long copy_strings (int argc, char **argv, unsigned long *page, unsigned long p, int from_kmem) at ./fs/exec.c:104>:" -> "set_fs()";
	"copy_strings() <unsigned long copy_strings (int argc, char **argv, unsigned long *page, unsigned long p, int from_kmem) at ./fs/exec.c:104>:" -> "get_fs_long()";
	"copy_strings() <unsigned long copy_strings (int argc, char **argv, unsigned long *page, unsigned long p, int from_kmem) at ./fs/exec.c:104>:" -> "panic()";
	"copy_strings() <unsigned long copy_strings (int argc, char **argv, unsigned long *page, unsigned long p, int from_kmem) at ./fs/exec.c:104>:" -> "get_fs_byte()";
	"copy_strings() <unsigned long copy_strings (int argc, char **argv, unsigned long *page, unsigned long p, int from_kmem) at ./fs/exec.c:104>:" -> "get_free_page()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "get_fs()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "set_fs()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "get_ds()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "N_MAGIC()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "N_TXTOFF()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "printk()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "sys_close()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "free_page_tables()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "get_base()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "get_limit()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "change_ldt() <unsigned long change_ldt (unsigned long text_size, unsigned long *page) at ./fs/exec.c:154>:";
	"change_ldt() <unsigned long change_ldt (unsigned long text_size, unsigned long *page) at ./fs/exec.c:154>:" -> "get_base()";
	"change_ldt() <unsigned long change_ldt (unsigned long text_size, unsigned long *page) at ./fs/exec.c:154>:" -> "set_base()";
	"change_ldt() <unsigned long change_ldt (unsigned long text_size, unsigned long *page) at ./fs/exec.c:154>:" -> "set_limit()";
	"change_ldt() <unsigned long change_ldt (unsigned long text_size, unsigned long *page) at ./fs/exec.c:154>:" -> "put_page()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "create_tables() <unsigned long *create_tables (char *p, int argc, int envc) at ./fs/exec.c:46>:";
	"create_tables() <unsigned long *create_tables (char *p, int argc, int envc) at ./fs/exec.c:46>:" -> "put_fs_long()";
	"create_tables() <unsigned long *create_tables (char *p, int argc, int envc) at ./fs/exec.c:46>:" -> "get_fs_byte()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "put_fs_byte()";
	"do_execve() <int do_execve (unsigned long *eip, long tmp, char *filename, char **argv, char **envp) at ./fs/exec.c:182>:" -> "free_page()";
	"sys_fstat() <int sys_fstat (unsigned int fd, struct stat *statbuf) at ./fs/stat.c:47>:" -> "cp_stat() <void cp_stat (struct m_inode *inode, struct stat *statbuf) at ./fs/stat.c:15>:";
	"cp_stat() <void cp_stat (struct m_inode *inode, struct stat *statbuf) at ./fs/stat.c:15>:" -> "verify_area()";
	"cp_stat() <void cp_stat (struct m_inode *inode, struct stat *statbuf) at ./fs/stat.c:15>:" -> "put_fs_byte()";
	"sys_stat() <int sys_stat (char *filename, struct stat *statbuf) at ./fs/stat.c:36>:" -> "namei()";
	"sys_stat() <int sys_stat (char *filename, struct stat *statbuf) at ./fs/stat.c:36>:" -> "cp_stat() <void cp_stat (struct m_inode *inode, struct stat *statbuf) at ./fs/stat.c:15>:";
	"cp_stat() <void cp_stat (struct m_inode *inode, struct stat *statbuf) at ./fs/stat.c:15>:" -> "verify_area()";
	"cp_stat() <void cp_stat (struct m_inode *inode, struct stat *statbuf) at ./fs/stat.c:15>:" -> "put_fs_byte()";
	"sys_stat() <int sys_stat (char *filename, struct stat *statbuf) at ./fs/stat.c:36>:" -> "iput()";
	"sys_dup() <int sys_dup (unsigned int fildes) at ./fs/fcntl.c:42>:" -> "dupfd() <int dupfd (unsigned int fd, unsigned int arg) at ./fs/fcntl.c:18>:";
	"sys_dup2() <int sys_dup2 (unsigned int oldfd, unsigned int newfd) at ./fs/fcntl.c:36>:" -> "sys_close()";
	"sys_dup2() <int sys_dup2 (unsigned int oldfd, unsigned int newfd) at ./fs/fcntl.c:36>:" -> "dupfd() <int dupfd (unsigned int fd, unsigned int arg) at ./fs/fcntl.c:18>:";
	"sys_fcntl() <int sys_fcntl (unsigned int fd, unsigned int cmd, unsigned long arg) at ./fs/fcntl.c:47>:" -> "dupfd() <int dupfd (unsigned int fd, unsigned int arg) at ./fs/fcntl.c:18>:";
	"rw_char() <int rw_char (int rw, int dev, char *buf, int count, off_t *pos) at ./fs/char_dev.c:95>:" -> "MAJOR()";
	"rw_char() <int rw_char (int rw, int dev, char *buf, int count, off_t *pos) at ./fs/char_dev.c:95>:" -> "MINOR()";
	"rw_memory() <int rw_memory (int rw, unsigned minor, char *buf, int count, off_t *pos) at ./fs/char_dev.c:65>:" -> "rw_ram() <int rw_ram (int rw, char *buf, int count, off_t *pos) at ./fs/char_dev.c:34>:";
	"rw_memory() <int rw_memory (int rw, unsigned minor, char *buf, int count, off_t *pos) at ./fs/char_dev.c:65>:" -> "rw_mem() <int rw_mem (int rw, char *buf, int count, off_t *pos) at ./fs/char_dev.c:39>:";
	"rw_memory() <int rw_memory (int rw, unsigned minor, char *buf, int count, off_t *pos) at ./fs/char_dev.c:65>:" -> "rw_kmem() <int rw_kmem (int rw, char *buf, int count, off_t *pos) at ./fs/char_dev.c:44>:";
	"rw_memory() <int rw_memory (int rw, unsigned minor, char *buf, int count, off_t *pos) at ./fs/char_dev.c:65>:" -> "rw_port() <int rw_port (int rw, char *buf, int count, off_t *pos) at ./fs/char_dev.c:49>:";
	"rw_port() <int rw_port (int rw, char *buf, int count, off_t *pos) at ./fs/char_dev.c:49>:" -> "put_fs_byte()";
	"rw_port() <int rw_port (int rw, char *buf, int count, off_t *pos) at ./fs/char_dev.c:49>:" -> "inb()";
	"rw_port() <int rw_port (int rw, char *buf, int count, off_t *pos) at ./fs/char_dev.c:49>:" -> "outb()";
	"rw_port() <int rw_port (int rw, char *buf, int count, off_t *pos) at ./fs/char_dev.c:49>:" -> "get_fs_byte()";
	"rw_tty() <int rw_tty (int rw, unsigned minor, char *buf, int count, off_t *pos) at ./fs/char_dev.c:27>:" -> "rw_ttyx() <int rw_ttyx (int rw, unsigned minor, char *buf, int count, off_t *pos) at ./fs/char_dev.c:21>:";
	"rw_ttyx() <int rw_ttyx (int rw, unsigned minor, char *buf, int count, off_t *pos) at ./fs/char_dev.c:21>:" -> "tty_read()";
	"rw_ttyx() <int rw_ttyx (int rw, unsigned minor, char *buf, int count, off_t *pos) at ./fs/char_dev.c:21>:" -> "tty_write()";
	"read_pipe() <int read_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:13>:" -> "PIPE_SIZE()";
	"read_pipe() <int read_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:13>:" -> "wake_up()";
	"read_pipe() <int read_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:13>:" -> "sleep_on()";
	"read_pipe() <int read_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:13>:" -> "PIPE_TAIL()";
	"read_pipe() <int read_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:13>:" -> "put_fs_byte()";
	"sys_pipe() <int sys_pipe (unsigned long *fildes) at ./fs/pipe.c:71>:" -> "get_pipe_inode()";
	"sys_pipe() <int sys_pipe (unsigned long *fildes) at ./fs/pipe.c:71>:" -> "put_fs_long()";
	"write_pipe() <int write_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:41>:" -> "PIPE_SIZE()";
	"write_pipe() <int write_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:41>:" -> "wake_up()";
	"write_pipe() <int write_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:41>:" -> "sleep_on()";
	"write_pipe() <int write_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:41>:" -> "PIPE_HEAD()";
	"write_pipe() <int write_pipe (struct m_inode *inode, char *buf, int count) at ./fs/pipe.c:41>:" -> "get_fs_byte()";
	"sys_lseek() <int sys_lseek (unsigned int fd, off_t offset, int origin) at ./fs/read_write.c:25>:" -> "IS_SEEKABLE()";
	"sys_lseek() <int sys_lseek (unsigned int fd, off_t offset, int origin) at ./fs/read_write.c:25>:" -> "MAJOR()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "verify_area()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "read_pipe()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "S_ISCHR()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "rw_char()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "S_ISBLK()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "block_read()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "S_ISDIR()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "S_ISREG()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "file_read()";
	"sys_read() <int sys_read (unsigned int fd, char *buf, int count) at ./fs/read_write.c:55>:" -> "printk()";
	"sys_write() <int sys_write (unsigned int fd, char *buf, int count) at ./fs/read_write.c:83>:" -> "write_pipe()";
	"sys_write() <int sys_write (unsigned int fd, char *buf, int count) at ./fs/read_write.c:83>:" -> "S_ISCHR()";
	"sys_write() <int sys_write (unsigned int fd, char *buf, int count) at ./fs/read_write.c:83>:" -> "rw_char()";
	"sys_write() <int sys_write (unsigned int fd, char *buf, int count) at ./fs/read_write.c:83>:" -> "S_ISBLK()";
	"sys_write() <int sys_write (unsigned int fd, char *buf, int count) at ./fs/read_write.c:83>:" -> "block_write()";
	"sys_write() <int sys_write (unsigned int fd, char *buf, int count) at ./fs/read_write.c:83>:" -> "S_ISREG()";
	"sys_write() <int sys_write (unsigned int fd, char *buf, int count) at ./fs/read_write.c:83>:" -> "file_write()";
	"sys_write() <int sys_write (unsigned int fd, char *buf, int count) at ./fs/read_write.c:83>:" -> "printk()";
	"sys_access() <int sys_access (const char *filename, int mode) at ./fs/open.c:47>:" -> "namei()";
	"sys_access() <int sys_access (const char *filename, int mode) at ./fs/open.c:47>:" -> "iput()";
	"sys_chdir() <int sys_chdir (const char *filename) at ./fs/open.c:75>:" -> "namei()";
	"sys_chdir() <int sys_chdir (const char *filename) at ./fs/open.c:75>:" -> "S_ISDIR()";
	"sys_chdir() <int sys_chdir (const char *filename) at ./fs/open.c:75>:" -> "iput()";
	"sys_chmod() <int sys_chmod (const char *filename, int mode) at ./fs/open.c:105>:" -> "namei()";
	"sys_chmod() <int sys_chmod (const char *filename, int mode) at ./fs/open.c:105>:" -> "suser()";
	"sys_chmod() <int sys_chmod (const char *filename, int mode) at ./fs/open.c:105>:" -> "iput()";
	"sys_chown() <int sys_chown (const char *filename, int uid, int gid) at ./fs/open.c:121>:" -> "namei()";
	"sys_chown() <int sys_chown (const char *filename, int uid, int gid) at ./fs/open.c:121>:" -> "suser()";
	"sys_chown() <int sys_chown (const char *filename, int uid, int gid) at ./fs/open.c:121>:" -> "iput()";
	"sys_chroot() <int sys_chroot (const char *filename) at ./fs/open.c:90>:" -> "namei()";
	"sys_chroot() <int sys_chroot (const char *filename) at ./fs/open.c:90>:" -> "S_ISDIR()";
	"sys_chroot() <int sys_chroot (const char *filename) at ./fs/open.c:90>:" -> "iput()";
	"sys_close() <int sys_close (unsigned int fd) at ./fs/open.c:193>:" -> "panic()";
	"sys_close() <int sys_close (unsigned int fd) at ./fs/open.c:193>:" -> "iput()";
	"sys_creat() <int sys_creat (const char *pathname, int mode) at ./fs/open.c:188>:" -> "sys_open() <int sys_open (const char *filename, int flag, int mode) at ./fs/open.c:138>:";
	"sys_open() <int sys_open (const char *filename, int flag, int mode) at ./fs/open.c:138>:" -> "open_namei()";
	"sys_open() <int sys_open (const char *filename, int flag, int mode) at ./fs/open.c:138>:" -> "S_ISCHR()";
	"sys_open() <int sys_open (const char *filename, int flag, int mode) at ./fs/open.c:138>:" -> "MAJOR()";
	"sys_open() <int sys_open (const char *filename, int flag, int mode) at ./fs/open.c:138>:" -> "MINOR()";
	"sys_open() <int sys_open (const char *filename, int flag, int mode) at ./fs/open.c:138>:" -> "iput()";
	"sys_open() <int sys_open (const char *filename, int flag, int mode) at ./fs/open.c:138>:" -> "S_ISBLK()";
	"sys_open() <int sys_open (const char *filename, int flag, int mode) at ./fs/open.c:138>:" -> "check_disk_change()";
	"sys_utime() <int sys_utime (char *filename, struct utimbuf *times) at ./fs/open.c:24>:" -> "namei()";
	"sys_utime() <int sys_utime (char *filename, struct utimbuf *times) at ./fs/open.c:24>:" -> "get_fs_long()";
	"sys_utime() <int sys_utime (char *filename, struct utimbuf *times) at ./fs/open.c:24>:" -> "iput()";
	"free_block() <void free_block (int dev, int block) at ./fs/bitmap.c:47>:" -> "get_super()";
	"free_block() <void free_block (int dev, int block) at ./fs/bitmap.c:47>:" -> "panic()";
	"free_block() <void free_block (int dev, int block) at ./fs/bitmap.c:47>:" -> "get_hash_table()";
	"free_block() <void free_block (int dev, int block) at ./fs/bitmap.c:47>:" -> "printk()";
	"free_block() <void free_block (int dev, int block) at ./fs/bitmap.c:47>:" -> "brelse()";
	"free_block() <void free_block (int dev, int block) at ./fs/bitmap.c:47>:" -> "clear_bit()";
	"free_inode() <void free_inode (struct m_inode *inode) at ./fs/bitmap.c:107>:" -> "memset()";
	"free_inode() <void free_inode (struct m_inode *inode) at ./fs/bitmap.c:107>:" -> "printk()";
	"free_inode() <void free_inode (struct m_inode *inode) at ./fs/bitmap.c:107>:" -> "panic()";
	"free_inode() <void free_inode (struct m_inode *inode) at ./fs/bitmap.c:107>:" -> "get_super()";
	"free_inode() <void free_inode (struct m_inode *inode) at ./fs/bitmap.c:107>:" -> "clear_bit()";
	"new_block() <int new_block (int dev) at ./fs/bitmap.c:75>:" -> "get_super()";
	"new_block() <int new_block (int dev) at ./fs/bitmap.c:75>:" -> "panic()";
	"new_block() <int new_block (int dev) at ./fs/bitmap.c:75>:" -> "find_first_zero()";
	"new_block() <int new_block (int dev) at ./fs/bitmap.c:75>:" -> "set_bit()";
	"new_block() <int new_block (int dev) at ./fs/bitmap.c:75>:" -> "getblk()";
	"new_block() <int new_block (int dev) at ./fs/bitmap.c:75>:" -> "clear_block()";
	"new_block() <int new_block (int dev) at ./fs/bitmap.c:75>:" -> "brelse()";
	"new_inode() <struct m_inode *new_inode (int dev) at ./fs/bitmap.c:136>:" -> "get_empty_inode()";
	"new_inode() <struct m_inode *new_inode (int dev) at ./fs/bitmap.c:136>:" -> "get_super()";
	"new_inode() <struct m_inode *new_inode (int dev) at ./fs/bitmap.c:136>:" -> "panic()";
	"new_inode() <struct m_inode *new_inode (int dev) at ./fs/bitmap.c:136>:" -> "find_first_zero()";
	"new_inode() <struct m_inode *new_inode (int dev) at ./fs/bitmap.c:136>:" -> "iput()";
	"new_inode() <struct m_inode *new_inode (int dev) at ./fs/bitmap.c:136>:" -> "set_bit()";
	"sys_ioctl() <int sys_ioctl (unsigned int fd, unsigned int cmd, unsigned long arg) at ./fs/ioctl.c:30>:" -> "S_ISCHR()";
	"sys_ioctl() <int sys_ioctl (unsigned int fd, unsigned int cmd, unsigned long arg) at ./fs/ioctl.c:30>:" -> "S_ISBLK()";
	"sys_ioctl() <int sys_ioctl (unsigned int fd, unsigned int cmd, unsigned long arg) at ./fs/ioctl.c:30>:" -> "MAJOR()";
	"block_read() <int block_read (int dev, unsigned long *pos, char *buf, int count) at ./fs/block_dev.c:47>:" -> "breada()";
	"block_read() <int block_read (int dev, unsigned long *pos, char *buf, int count) at ./fs/block_dev.c:47>:" -> "put_fs_byte()";
	"block_read() <int block_read (int dev, unsigned long *pos, char *buf, int count) at ./fs/block_dev.c:47>:" -> "brelse()";
	"block_write() <int block_write (int dev, long *pos, char *buf, int count) at ./fs/block_dev.c:14>:" -> "getblk()";
	"block_write() <int block_write (int dev, long *pos, char *buf, int count) at ./fs/block_dev.c:14>:" -> "breada()";
	"block_write() <int block_write (int dev, long *pos, char *buf, int count) at ./fs/block_dev.c:14>:" -> "get_fs_byte()";
	"block_write() <int block_write (int dev, long *pos, char *buf, int count) at ./fs/block_dev.c:14>:" -> "brelse()";
	"file_read() <int file_read (struct m_inode *inode, struct file *filp, char *buf, int count) at ./fs/file_dev.c:17>:" -> "bmap()";
	"file_read() <int file_read (struct m_inode *inode, struct file *filp, char *buf, int count) at ./fs/file_dev.c:17>:" -> "bread()";
	"file_read() <int file_read (struct m_inode *inode, struct file *filp, char *buf, int count) at ./fs/file_dev.c:17>:" -> "MIN()";
	"file_read() <int file_read (struct m_inode *inode, struct file *filp, char *buf, int count) at ./fs/file_dev.c:17>:" -> "put_fs_byte()";
	"file_read() <int file_read (struct m_inode *inode, struct file *filp, char *buf, int count) at ./fs/file_dev.c:17>:" -> "brelse()";
	"file_write() <int file_write (struct m_inode *inode, struct file *filp, char *buf, int count) at ./fs/file_dev.c:48>:" -> "create_block()";
	"file_write() <int file_write (struct m_inode *inode, struct file *filp, char *buf, int count) at ./fs/file_dev.c:48>:" -> "bread()";
	"file_write() <int file_write (struct m_inode *inode, struct file *filp, char *buf, int count) at ./fs/file_dev.c:48>:" -> "get_fs_byte()";
	"file_write() <int file_write (struct m_inode *inode, struct file *filp, char *buf, int count) at ./fs/file_dev.c:48>:" -> "brelse()";
}